#pragma once
#include <stdio.h>

void main()
{
    // 오버플로우
    /*
    // 컴퓨터의 정수 연산의 계산 결과가 허용 범위를 초과할 때
    // 발생하는 오류입니다.

    char value = 127;

    // 오버플로우의 경우
    // 최댓값보다 더 많은 값을 저장하게 되면 계속 최솟값부터
    // 최댓값을 넘어간 만큼 다시 계산합니다.

    // 실수일 때 오버플로우가 발생하면
    // infinity라는 값으로 출력합니다.

    value = value + 1;
    //    1  1  1  1   1  1  1
    //   [0][1][1][1] [1][1][1][1]
    // + [0][0][0][0] [0][0][0][1]
    //  ---------------------------
    //   [1][0][0][0] [0][0][0][0] = -128

    printf("value 값 : %d\n", value);
   */

   // 언더플로우
   /*
   // 컴퓨터의 정수 연산의 계산 결과가 허용 범위보다 작아질 때
   // 발생하는 오류입니다.

   char data = -128;

   // 실수일 때 언더플로우가 발생하면 0 이라는 값으로 출력합니다.

   data = data - 1;

   //   [1][0][0][0] [0][0][0][0] = -128
   // - [1][1][1][1] [1][1][1][1] = -1
   // --------------------------
   //    0  1  1  1   1  1  1  1  = 127

   printf("data의 값 : %d\n", data);
   */

   // 부호 없는 자료형
   /*
   // 부호 없는 자료형도 오버플로우와 언더플로우가 존재합니다.
   unsigned char variable = -1;

   // unsinged를 사용한다고 해서 자료형의 크기가 커지는 건 아닙니다.
   printf("variable의 값 : %d", variable);
   */

   // 비교 연산자
   // 피연산자를 서로 비교하고, 비교 결과가 
   // 참인지에 따라 논리 값을 반환하는 연산자입니다.

   // x(5) | y(10)
   // 비교 연산자를 했을 때 결과가 참이면 1을 반환하고,
   // 거짓이면 0을 반환합니다.

   // x < y (y가 x보다 크다.)  - (참) -> 1 
   // x > y (y가 x 보다 작다.) - (거짓) -> 0
   // x <= y (y가 x보다 크거나 같을 때) - (참) -> 1
   // x >= y (y가 x보다 작거나 같을 때) - (거짓) -> 0
   // x == y (x랑 y의 값이 같다.) - (거짓) -> 0
   // x != y (x랑 y의 값이 다르다.) - (참) -> 1

    int x = 5;
    int y = 10;

    int result1 = x < y;
    int result2 = x > y;
    int result3 = x <= y;
    int result4 = x >= y;
    int result5 = x == y;
    int result6 = x != y;

    printf("result1의 값 : %d\n", result1);
    printf("result2의 값 : %d\n", result2);
    printf("result3의 값 : %d\n", result3);
    printf("result4의 값 : %d\n", result4);
    printf("result5의 값 : %d\n", result5);
    printf("result6의 값 : %d\n", result6);
}
